{"version":3,"sources":["listDetail.js","List.js","App.js","theme.js","index.js"],"names":["Transition","React","forwardRef","props","ref","react_default","a","createElement","Slide","Object","assign","direction","ListDetailDialogue","_React$useState","useState","open","_React$useState2","slicedToArray","setOpen","handleClose","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","recipeData","title","DialogContent","DialogContentText","height","width","src","imageURL","chefName","tags","desc","DialogActions","Button","onClick","color","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","icon","TitlebarGridList","classes","setRecipeDetailView","className","GridList","cellHeight","GridListTile","key","cols","style","recipes","map","alt","GridListTileBar","actionIcon","IconButton","aria-label","concat","handleSetRecipeDetailView","Info_default","MadeWithLove","Typography","variant","align","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","client","contentful","space","accessToken","getEntries","entries","items","entry","fields","getAsset","photo","sys","imageAsset","chef","getEntry","tag","name","push","file","url","description","join","setState","Container","maxWidth","Box","my","component","gutterBottom","Component","createMuiTheme","primary","main","secondary","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.5075237a.chunk.js","sourcesContent":["import React, { useImperativeHandle } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ListDetailDialogue(props) {\n  const [open, setOpen] = React.useState(props.open ? true : false);\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{props.recipeData.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            <img height =\"100%\" width=\"100%\" src= {props.recipeData.imageURL}></img>\n            <h3> {props.recipeData.chefName } </h3> \n            <h3>{props.recipeData.tags} </h3>\n            <h3>{props.recipeData.desc}</h3> \n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>            \n  );\n}","import React, {useState, useRef} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ListDetailDialogue from './listDetail';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    height: 650,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function TitlebarGridList(props) {\n  const classes = useStyles();\n  const [recipeData, setRecipeDetailView] = React.useState(false);\n  //  handling dialog box/detailed view functionality\n  function handleSetRecipeDetailView(recipeData) {\n    setRecipeDetailView(recipeData)\n  }\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={300} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n        </GridListTile>\n        { recipeData ? \n            <ListDetailDialogue key={recipeData.title} recipeData ={recipeData} open={true} /> : '' }\n        {  props.recipes.map(recipeData => (\n          recipeData.title ?\n          <GridListTile key={recipeData.title}>\n            <img src={recipeData.imageURL} alt={recipeData.imageURL} />\n            <GridListTileBar\n              title={recipeData.title}\n              actionIcon={\n                <IconButton aria-label={`info about ${recipeData.title}`} className={classes.icon} onClick ={() => handleSetRecipeDetailView(recipeData)}>\n                  <InfoIcon/>\n                </IconButton>\n              }\n            />\n    ))}\n          </GridListTile> :''\n        ))}\n      </GridList>\n    </div>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport TitlebarGridList from './List';\nimport * as contentful from 'contentful';\n\nfunction MadeWithLove() {\n  return (\n    <Typography variant=\"h4\" color=\"textSecondary\" align=\"center\">\n      { 'Built with love by Kirandeep Kaur' }\n    </Typography>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state ={\n      recipes:[],\n    }\n    //setting up client\n    this.client = contentful.createClient({\n      space: \"kk2bw5ojx476\",\n      accessToken: \"7ac531648a1b5e1dab6c18b0979f822a5aad0fe5f1109829b8a197eb2be4b84c\"\n    });\n  }\n\n  async componentDidMount(){\n    let recipes = [];\n    let entries = await this.client.getEntries();\n\n    for(let entry of entries.items) {\n      \n        if (entry.fields.title) {\n        \n        const imageAsset = await this.client.getAsset(entry.fields.photo.sys.id);\n        const chef = entry.fields.chef ?  await this.client.getEntry(entry.fields.chef.sys.id): null;\n        const tags = entry.fields.tags ? entry.fields.tags.map(tag => tag.fields.name) : [];\n            \n        recipes.push({\n          title: entry.fields.title,\n          imageURL: imageAsset.fields.file.url,\n          desc: entry.fields.description,\n          chefName: chef!=null?chef.fields.name:'',\n          tags :tags.join(', ')\n        })\n      }\n    }\n    //setting state\n    this.setState({ recipes })\n  }\n\n  render(){\n    return (\n      <Container maxWidth=\"lg\">\n        <Box my={4}>\n          <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n            Marley Spoon Recipes Store       \n               </Typography>\n          <MadeWithLove />\n        </Box>\n        <TitlebarGridList recipes ={this.state.recipes}  />\n      </Container>\n    );\n  }\n  \n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}